# Python - обьектно-ориентированный язык программирования
# Все сущности в Python - обьекты
# Обьект - это экземпляр Класса
# Класс - это шаблон или прототип для создания обьектов
# На основании одного Класса можно создавать много Обьектов
# У каждого Обьекта есть Атрибуты
# Атрибут обьекта называется Методом, если его значение - Функция

# ОСНОВНЫЕ ТИПЫ:
import datetime  # импортирование модуля
str
'Yuliia'   # строка
int
10   # целое число
bool
True
False  # логический
list
[1, 2, 3]   # список
dict
{'min': 5, 'max': 8}  # словарь

# ФУКЦИЯ


def my_fn(a, b):   # my_fn имя, a, b - параметры
    a = a + 1       # тело функции
    c = a + b
    return c       # возврат результата


my_fn(1, 2)  # вызов функции


# ВСТРОЕННЫЕ ФУНКЦИИ
# print()   type()   id()   len()   sum()
# input()   round()   min()   max()   int()
# str()   bool()
# dir() отображает имена всех атрибутов обьекта, их можно вызывать через . (точку)

# name = 'Yuliia'
# print(name.upper())

print(dir(__builtins__))   # вывод всех встроенных функций в пайтане


# ВЫРАЖЕНИЯ (EXPRESSIONS)
# Результатом выражения является Значение:
# 5 + 3   # 8 - сумма значений
# a > b  # True or False
# 'Hello' + 'World'  #  'Hello World'
# my_func(10, 5)   # результат функции


# ИНСТРУКЦИИ (STATEMENTS)
# Инструкция выполняет действие
my_name = 'Yuliia'  # присвоение значения
if my_name:
    print(my_name)  # условная инструкция


# ПЕРЕМЕННЫЕ
# Переменные дают возможность повторного доступа к значениям
# Как называть:
# snake_case - переменные, функции, методы, модули (имя существительное, функция - глагол)
# PascalCase - классы
# my-package - пакеты
# DB_PASSWORD - константы
# Названия переменных должны быть понятными

# В Python существуют изменяемые и нетзменяемые обьекты
# Типы НЕИЗМЕНЯМЫХ обьектов:
# str  int   bool  float  tuple   NoneType  range
# Типы ИЗМЕНЯЕМЫХ обьектов:
# list  dict   set   user-defined classes

# Переменная содержит ссылку на обьект
# Получение адреса обьекта:
print(id(my_name))
